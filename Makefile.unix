# Copyright (C) Teemu Suutari

VPATH  := src src/common fuzzing testing

CXX	?= c++
COMMONFLAGS = -g -Wall -Wsign-compare -Wnarrowing -Isrc -Iapi -Iapi/ancient
CFLAGS	= $(COMMONFLAGS)
CXXFLAGS = $(COMMONFLAGS) -std=c++17 -fno-rtti -fvisibility=hidden -DANCIENT_API_VISIBILITY_DEFAULT

ifeq ($(BUILD_LIBRARY),1)
LIB	= ancient.dylib
else
LIB	=
endif

PROG	= ancient
MAIN	?= main.o
OBJS	= API.o Buffer.o Common.o MemoryBuffer.o StaticBuffer.o SubBuffer.o WrappedVectorBuffer.o CRC16.o CRC32.o \
	Decompressor.o LZWDecoder.o XPKDecompressor.o XPKMain.o \
	OutputStream.o InputStream.o RangeDecoder.o \
	ACCADecompressor.o ARTMDecompressor.o BLZWDecompressor.o BZIP2Decompressor.o \
	CBR0Decompressor.o CompactDecompressor.o CompressDecompressor.o CRMDecompressor.o CYB2Decoder.o \
	DEFLATEDecompressor.o DLTADecode.o DMSDecompressor.o FASTDecompressor.o \
	FBR2Decompressor.o FreezeDecompressor.o FRLEDecompressor.o HFMNDecompressor.o \
	HUFFDecompressor.o ILZRDecompressor.o IMPDecompressor.o LHLBDecompressor.o \
	LIN1Decompressor.o LIN2Decompressor.o LOBDecompressor.o LZBSDecompressor.o \
	LZCBDecompressor.o LZW2Decompressor.o LZW4Decompressor.o LZW5Decompressor.o \
	LZXDecompressor.o MASHDecompressor.o MMCMPDecompressor.o NONEDecompressor.o \
	NUKEDecompressor.o PackDecompressor.o PPDecompressor.o PPMQDecompressor.o RAKEDecompressor.o \
	RDCNDecompressor.o RLENDecompressor.o RNCDecompressor.o SDHCDecompressor.o \
	SHR3Decompressor.o SHRIDecompressor.o SLZ3Decompressor.o SMPLDecompressor.o \
	StoneCrackerDecompressor.o SQSHDecompressor.o SXSCDecompressor.o TDCSDecompressor.o \
	TPWMDecompressor.o  ZENODecompressor.o

all: $(PROG) $(LIB) test

.cpp.o:
	$(CXX) $(CXXFLAGS) -o $@ -c $<

ifeq ($(BUILD_LIBRARY),1)
$(LIB): $(OBJS)
	$(CXX) -Wl,-dylib -Wl,-install_name,@executable_path/$@ -shared -o $@ $^
	strip -X $@

$(PROG): $(MAIN) $(LIB) MemoryBuffer.o SubBuffer.o
	$(CXX) $(CFLAGS) -o $@ $(MAIN) MemoryBuffer.o SubBuffer.o ancient.dylib
else
$(PROG): $(OBJS) $(MAIN)
	$(CXX) $(CFLAGS) -o $@ $^
endif

test: $(OBJS) test.o
	$(CXX) $(CFLAGS) -o $@ $^

clean:
	rm -f $(OBJS) $(MAIN) $(PROG) $(LIB) test test.o *~ src/*~

.PHONY:
